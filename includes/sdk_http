<h1 id="http-api">HTTP API</h1>

<p>Our HTTP API can be used if our system does not yet support your programming language / game engine.</p>

<p>Basically, just send data to our REST API through standard HTTPS calls. All data passed needs to be inside the GET query string. Note that for compatibility with special characters, you are always required to URL encode all data sent to our API.</p>

<h2 id="in-game-flow">In-game Flow</h2>

<ol>
<li>User login

<ul>
<li>Successful login needs to be done before any data can be sent to TGA (except anonymous event data)</li>
</ul></li>
<li> Start calling playing game once every 60 seconds

<ul>
<li>After login is successful. This will inform the TGA system that the user is currently playing the game and the user can be tracked. Also the TGA Teacher Dashboard shows that the user is currently playing the game.</li>
</ul></li>
<li> Update player state as it changes in game

<ul>
<li>This information will be shown on the Teacher Dashboard on the TGA website so that the Teacher can easily see what the students are currently doing in game.</li>
</ul></li>
<li> Send event data

<ul>
<li>Events and the data in them have been set up on the TGA website by TeacherGaming. This is the data that is needed to track student progress.</li>
</ul></li>
</ol>

<h2 id="login-student">Login Student</h2>

<blockquote>
<p>Example Output</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
  </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Student with this ID exists in this class."</span><span class="p">,</span><span class="w">
  </span><span class="s2">"responseCreatedAt"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2017-06-13T07:08:47.763Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"debug"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"sent"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2017-03-15T12:05:35.722Z"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"container"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zo5jajsD99beDQyt7-pv0n"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"login_message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Logged into class &lt;classid&gt; with studentid &lt;studentid&gt;"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"login_message_html"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Logged into class &lt;b&gt;classid&lt;/b&gt; with studentid &lt;b&gt;studentid&lt;/b&gt;"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"subscription"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"subscription_expired"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
      </span><span class="s2">"subscription_expired_message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Your subscription has expired."</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"student"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"studentid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;studentid&gt;"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"studentid_unique"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;HashedUniqueStudentID&gt;"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"created_account"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
      </span><span class="s2">"teacher_creatubbles_linked"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="s2">"class"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"classid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;classid&gt;"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"classid_unique"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;HashedUniqueClassID&gt;"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"allow_student_signup"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"game_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;gameâ€™s name&gt;"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Login user to our system. Class ID is unique throughout the whole system and student ID is unique throughout the class the user is in. Student ID can be thought as an username and class ID as a password.</p>

<h3 id="http-request">HTTP Request</h3>

<p><code class="prettyprint">GET https://analyticsdata.teachergaming.com/api/validate</code></p>

<h3 id="query-parameters">Query Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>classid</td>
<td></td>
<td>TGA Class ID</td>
</tr>
<tr>
<td>studentid</td>
<td></td>
<td>TGA studentid</td>
</tr>
<tr>
<td>apikey</td>
<td></td>
<td>Your game&rsquo;s API key</td>
</tr>
</tbody></table>

<aside class="info">
Your API key has been provided to you by TeacherGaming or hardcoded to your SDK.
</aside>

<h2 id="playing-game">Playing Game</h2>
<pre class="highlight ruby tab-ruby"><code><span class="nb">require</span> <span class="s1">'kittn'</span>

<span class="n">api</span> <span class="o">=</span> <span class="no">Kittn</span><span class="o">::</span><span class="no">APIClient</span><span class="p">.</span><span class="nf">authorize!</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">)</span>
<span class="n">api</span><span class="p">.</span><span class="nf">kittens</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">kittn</span>

<span class="n">api</span> <span class="o">=</span> <span class="n">kittn</span><span class="o">.</span><span class="n">authorize</span><span class="p">(</span><span class="s">'meowmeowmeow'</span><span class="p">)</span>
<span class="n">api</span><span class="o">.</span><span class="n">kittens</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre><pre class="highlight shell tab-shell"><code>curl <span class="s2">"http://example.com/api/kittens/2"</span>
  -H <span class="s2">"Authorization: meowmeowmeow"</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">kittn</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'kittn'</span><span class="p">);</span>

<span class="kd">let</span> <span class="nx">api</span> <span class="o">=</span> <span class="nx">kittn</span><span class="p">.</span><span class="nx">authorize</span><span class="p">(</span><span class="s1">'meowmeowmeow'</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">max</span> <span class="o">=</span> <span class="nx">api</span><span class="p">.</span><span class="nx">kittens</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
  </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Max"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"breed"</span><span class="p">:</span><span class="w"> </span><span class="s2">"unknown"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"fluffiness"</span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w">
  </span><span class="s2">"cuteness"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Inform TGA that the user is currently logged in and playing. Send once every minute.</p>

<aside class="warning">Inside HTML code blocks like this one, you can&rsquo;t use Markdown, so use <code>&lt;code&gt;</code> blocks to denote code.</aside>

<h3 id="http-request">HTTP Request</h3>

<p><code class="prettyprint">GET https://analyticsdata.teachergaming.com/api/playing_game</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>classid</td>
<td>true</td>
<td>TGA Class ID</td>
</tr>
<tr>
<td>studentid</td>
<td>true</td>
<td>TGA studentid</td>
</tr>
<tr>
<td>apikey</td>
<td>true</td>
<td>Your game&rsquo;s API key</td>
</tr>
</tbody></table>
